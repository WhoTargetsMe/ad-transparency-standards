name: release schema

on:
  pull_request:
    branches: [main]
  push:
    paths:
      - "schema.json"
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Get Schema Version
        id: get-version
        run: |
          VERSION=$(jq -r '.properties.schemaVersion.const' schema.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check-release
        run: |
          EXISTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.get-version.outputs.version }}" \
            | jq -r '.message // empty')
          if [ "$EXISTS" = "Not Found" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.check-release.outputs.exists != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: Schema v${{ steps.get-version.outputs.version }}
          body: |
            Schema version ${{ steps.get-version.outputs.version }} released automatically.

            Changes in this version:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
